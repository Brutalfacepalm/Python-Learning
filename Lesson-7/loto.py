#!/usr/bin/python3

"""
== Лото ==
Правила игры в лото.
Игра ведется с помощью специальных карточек, на которых отмечены числа,
и фишек (бочонков) с цифрами.
Количество бочонков — 90 штук (с цифрами от 1 до 90).
Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86
--------------------------
В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается
случайная карточка.
Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.
Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.

Побеждает тот, кто первый закроет все числа на своей карточке.
Пример одного хода:
Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71
--------------------------
-- Карточка компьютера ---
 7 87     - 14    11
      16 49    55 88    77
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)
Подсказка: каждый следующий случайный бочонок из мешка удобно получать
с помощью функции-генератора.
Подсказка: для работы с псевдослучайными числами удобно использовать
модуль random: http://docs.python.org/3/library/random.html
"""
import create_card
import random

class Card: # класс для работы с карточкой
    def __init__(self, name):
        self.name = name
        self.card = self.give(3,9)

    def give(self, rows, cols):
        return create_card.fill(rows, cols) # обращаемся к библиотеке по созданию и заполнению карточки

    def print_card(self):  # печатает удобочитаемую карточку
        print(('Карчтока ' + self.name + 'а').center(26, '-'))
        for r in self.card:
            for c in r:
                print(str(c).rjust(2, ' '), end=' ')
            print('')

    def cross_out(self, number):  # зачеркивает номер на карточке, если находит его
        for r in self.card:
            if number in r:
                self.card[self.card.index(r)][r.index(number)] = '-'
                return True

class Bag: # создаем мешок с бочонками
    def __init__(self):
        self.bag = [i for i in range(1,91)]

    def get_numbers(self): # метод, достающий их мешка случайный бочонок, сообщает что мешок пуст, если бочонков больше нет
        try:
            number = self.bag.pop(random.randint(0, len(self.bag)-1))
        except ValueError:
            print('Мешок пуст')
        return number

def winner(pl_score, pc_score): # функция проверки наличия победителя
    if pl_score == 15 and pc_score == 15:
        print('У Вас ничья!')
        quit()
    elif pc_score == 15:
        print('Компьютер выиграл!')
        quit()
    elif pl_score == 15:
        print('Вы выиграли!')
        quit()

player = Card('игрок') # игрок
player_card = player.card # игрок получает карточку с числами
pc = Card('компьютер') # компьютер
pc_card = pc.card # компьютер получает карточку с числами

bag = Bag() # в мешок складываются бочонки
pl_score, pc_score = 0, 0 # карточки еще девственно чисты, зачеркнутых элементов нет

while pl_score < 15 and pc_score < 15: # запускается игра
    number = bag.get_numbers() # достается первый бочонок
    player.print_card() # мы видим карточку игрока
    pc.print_card() # мы видим карточку компьютера

    print('Новый бочонок: {} (осталось {})'.format(number, len(bag.bag))) # показывается бочонок

    if pc.cross_out( number): # на карточке компьютера автоматически вычеркивается число, если оно там есть
        pc_score += 1

    choice = input('Зачеркнуть цифру? (y/n)\n') # игрок проверяет свою карточку и принимает решение
    while True:
        if choice == 'y':
            if player.cross_out(number): # если на карточке игрока есть число и он хочет зачеркнуть, то пусть так оно и будет
                pl_score += 1
                break
            else:
                print('Вы проиграли') # если игрок захотел сжульничать, то проиграл
                quit()
        elif choice == 'n':
            if player.cross_out(number): # если игрок не увидел число, то проиграл
                print('Вы проиграли')
                quit()
            else:
                break # если на карточке игрока нет числа и он не хочет жульничать, игра продолжается
        else:
            print('Новый бочонок: {} (осталось {})'.format(number, len(bag.bag)))  # показывается бочонок
            choice = input('Неправильный выбор, попробуйте снова (y/n)')
winner(pl_score, pc_score)  # проверяется победитель